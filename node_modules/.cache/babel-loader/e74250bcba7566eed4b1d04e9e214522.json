{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\hemisphere\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\"; /// class based component\n/// 1. JS class\n/// 2. extends React.Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  /// constructor\n  constructor(props) {\n    super(props); /// 3.super\n    /// state\n\n    this.state = {\n      latitude: null,\n      errorMessage: ''\n    };\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        latitude: position.coords.latitude\n      }); /// setState - update/rerender state property\n    }, error => {\n      this.setState({\n        errorMessage: error.message\n      });\n    });\n  } /// 3.render\n\n\n  render() {\n    /// JSX\n    /// conditional rendering\n    if (this.state.errorMessage && !this.state.latitude) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", this.state.errorMessage, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (!this.state.errorMessage && this.state.latitude) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", this.state.latitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 5\n}, this), document.querySelector('#root'));","map":{"version":3,"sources":["C:/React/hemisphere/src/index.js"],"names":["React","ReactDOM","App","Component","constructor","props","state","latitude","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","error","message","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAGA;AACA;AACA;;;;AACA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAE9B;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CACF;AAEb;;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,YAAY,EAAE;AAAhC,KAAb;AAEAC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CAEKC,QAAD,IAAc;AACV,WAAKC,QAAL,CAAc;AAACP,QAAAA,QAAQ,EAAEM,QAAQ,CAACE,MAAT,CAAgBR;AAA3B,OAAd,EADU,CAC0C;AACvD,KAJL,EAMKS,KAAD,IAAW;AACP,WAAKF,QAAL,CAAc;AAAEN,QAAAA,YAAY,EAAEQ,KAAK,CAACC;AAAtB,OAAd;AACH,KARL;AAUH,GAnB6B,CAqB9B;;;AACAC,EAAAA,MAAM,GAAG;AAEL;AACA;AACA,QAAG,KAAKZ,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,QAA1C,EAAoD;AAEhD,0BAAO;AAAA,wBAAQ,KAAKD,KAAL,CAAWE,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,QAAG,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,QAA1C,EAAoD;AAEhD,0BAAO;AAAA,wBAAQ,KAAKD,KAAL,CAAWC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAHD,MAKK;AACD,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AAvC6B;;AA0ClCN,QAAQ,CAACiB,MAAT,eACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QADJ,EAEIC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFJ","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n\r\n/// class based component\r\n/// 1. JS class\r\n/// 2. extends React.Component\r\nclass App extends React.Component {\r\n\r\n    /// constructor\r\n    constructor(props) {\r\n        super(props) /// 3.super\r\n\r\n        /// state\r\n        this.state = { latitude: null, errorMessage: ''}\r\n\r\n        window.navigator.geolocation.getCurrentPosition(\r\n\r\n            (position) => {\r\n                this.setState({latitude: position.coords.latitude}) /// setState - update/rerender state property\r\n            },\r\n\r\n            (error) => {\r\n                this.setState({ errorMessage: error.message })\r\n            }\r\n        );\r\n    }\r\n\r\n    /// 3.render\r\n    render() { \r\n\r\n        /// JSX\r\n        /// conditional rendering\r\n        if(this.state.errorMessage && !this.state.latitude) {\r\n\r\n            return <div> { this.state.errorMessage } </div>\r\n        }\r\n        \r\n        if(!this.state.errorMessage && this.state.latitude) {\r\n\r\n            return <div> { this.state.latitude }</div>\r\n        }\r\n\r\n        else {\r\n            return <div>Loading...</div>\r\n        }\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n)"]},"metadata":{},"sourceType":"module"}